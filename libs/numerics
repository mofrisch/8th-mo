\ -*- 8th -*-
\ BSD 3-Clause License

\ Copyright (c) 2020, Moritz Frisch
\ All rights reserved.

\ Redistribution and use in source and binary forms, with or without
\ modification, are permitted provided that the following conditions are met:

\ 1. Redistributions of source code must retain the above copyright notice, this
\   list of conditions and the following disclaimer.

\ 2. Redistributions in binary form must reproduce the above copyright notice,
\   this list of conditions and the following disclaimer in the documentation
\   and/or other materials provided with the distribution.

\ 3. Neither the name of the copyright holder nor the names of its
\  contributors may be used to endorse or promote products derived from
\   this software without specific prior written permission.

\ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
\ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
\ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
\ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
\ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
\ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
\ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
\ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
\ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
\ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

\ common numeric words
ns: nm
1000 var, max-iterations
false var, num-debug
2 var, exp-size

var mantissa-size
-- w: num:mantissa!
-- s: n -- 
-- d: change width of mantissa to n          
: mantissa! 
    dup mantissa-size ! 3 - ## ;

10 mantissa!

var epsilon
: eps \ -- n
   epsilon @ ;
: eps! \ n --
   epsilon ! ;
1e-16 eps!

1 var, print-lines \ in a table, print every n-th number

: short-floats \ --
   19 mantissa! 1e-16 eps! ;

: big-floats \ n --
   dup n:1+ dup n# mantissa! F10 swap n:neg n:^ eps! ;

short-floats

defer: f

\ right now ln does not work for bfloat, so we convert
: ld \ n -- n
   n:float n:ln 10 n:ln n:/ ;

\ for n > some 300, this is not correct because of ln error
: exponent \ n -- n
   dup 0 > if ld  else
   dup 0 < if n:neg ld else
   then then n:floor n:int ;

: exp-length \ n -- n
   dup 0 = if drop 1 else 
   dup 0 < if n:neg then 
   n:1+ ld n:ceil n:int then ;

: print-sign \ n -- n
   dup 0 < if "-" . else "+" . then ;

: print-zeroes \ n -- n
   dup exp-length exp-size @ swap n:- ( "0" . ) swap times ;
   
: print-value \ n --
   n:abs . ;

: print-exponent \ n -- +|-00n
   print-sign print-zeroes print-value ;

: mantissa \ n exp -- n
   10. swap n:^ n:/ ; 

: f. \ n --
   mantissa-size @ #>
   dup exponent dup  >r \ n exp
   mantissa . "e" . 
   r> print-exponent ;


   

